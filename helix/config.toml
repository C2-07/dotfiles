theme = "cc_theme"

[editor]
line-number = "relative"
cursorline = true
color-modes = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.statusline]
left = ["mode", "spinner", "file-name", "file-modification-indicator"]
center = ["diagnostics"]
right = [
  "position",
  "total-line-numbers",
  "file-encoding",
  "file-line-ending",
  "file-type",
]

[editor.whitespace.render]
space = "all"
tab = "all"
newline = "none"

[editor.indent-guides]
render = true
character = "â”‚"

[editor.soft-wrap]
enable = true

[keys.normal]
Cmd-s = ":w" # Maps Ctrl-s to the typable command :w which is an alias for :write (save file)
Cmd-o = ":open ~/.config/helix/config.toml" # Maps Ctrl-o to opening of the helix config file
Y = ":clipboard-yank"
a = "move_char_left" # Maps the 'a' key to the move_char_left command
w = "move_line_up" # Maps the 'w' key move_line_up
"C-S-esc" = "extend_line" # Maps Ctrl-Shift-Escape to extend_line
"ret" = [
  "open_below",
  "normal_mode",
] # Maps the enter key to open_below then re-enter normal mode
"A-x" = "@x<A-d>" # Maps Alt-x to a macro selecting the whole line and deleting it without yanking it

[keys.insert]
"A-x" = "normal_mode" # Maps Alt-X to enter normal mode

[keys.insert.j]
k = "normal_mode" # Maps `jk` to exit insert mode

[keys.normal.g]
a = "code_action" # Maps `ga` to show possible code actions

# invert `j` and `k` in view mode
[keys.normal.z]
j = "scroll_up"
k = "scroll_down"

# create a new minor mode bound to `+`
[keys.normal."+"]
m = ":run-shell-command make"
c = ":run-shell-command cargo build"
t = ":run-shell-command cargo test"


